version: '3.5'
services:
  nginx:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "../container/nginx/conf/docker_proxy.conf:/etc/nginx/conf.d/docker_proxy.conf:ro"
      - "../container/nginx/certs:/etc/nginx/certs:ro"
      - "../container/nginx/vhosts:/etc/nginx/vhost.d"
      - "../container/nginx/vhosts_base/docker-ui_location:/etc/nginx/vhost.d/docker-ui.${BASE_DOMAIN}_location"
      - "../container/nginx/html:/usr/share/nginx/html"
      - "../container/nginx/htpasswd/kibana:/etc/nginx/htpasswd/kibana.${BASE_DOMAIN}"
      - "../container/nginx/htpasswd/docker-ui:/etc/nginx/htpasswd/docker-ui.${BASE_DOMAIN}"
      - "../container/nginx/update-htpasswd.sh:/update-htpasswd.sh"
    ports:
      - "${PROXY_PORT}:80"
    restart: always

  ui:
    #image: uifd/ui-for-docker
    image: portainer/portainer
    container_name: docker-ui
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      VIRTUAL_PORT: 9000
      VIRTUAL_HOST: docker-ui.${BASE_DOMAIN}
    restart: always

  logstash:
    image: svenwltr/console-gelf-server
    container_name: logstash
    links: []
    volumes: []
    ports:
      - "12201:12201/udp"
    restart: always

networks:
  default:
    driver: bridge
    name: proxy
